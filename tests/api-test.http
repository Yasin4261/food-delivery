# Özgür Mutfak E-Commerce API Test File
# Bu dosya VS Code REST Client extension ile kullanılabilir
# Her ### ile ayrılan bölüm ayrı bir HTTP request'tir

@baseUrl = http://localhost:3001
@apiVersion = v1

### Health Check - API Durumu Kontrolü
GET {{baseUrl}}/api/{{apiVersion}}/products

###

### 1. REGISTER - Yeni Kullanıcı Kaydı
# Yeni kullanıcı oluşturur ve JWT token döner
POST {{baseUrl}}/api/{{apiVersion}}/auth/register
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "password123",
  "first_name": "John",
  "last_name": "Doe"
}

###

### 2. REGISTER - Duplicate Email Test (400 Error Expected)
# Aynı email ile tekrar kayıt denenir - hata beklenir
POST {{baseUrl}}/api/{{apiVersion}}/auth/register
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "password456",
  "first_name": "Jane",
  "last_name": "Smith"
}

###

### 3. LOGIN - Giriş Yap
# Kayıtlı kullanıcı ile giriş yapar ve yeni JWT token alır
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "password123"
}

###

### 4. LOGIN - Wrong Password Test (401 Error Expected)
# Yanlış şifre ile giriş denenir - hata beklenir
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "wrongpassword"
}

###

### 5. LOGOUT - Çıkış Yap
# NOT: Authorization header'ındaki token'ı yukarıdaki login/register response'undan alıp yapıştırın
POST {{baseUrl}}/api/{{apiVersion}}/auth/logout
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

###

### 6. GET PRODUCTS - Ürünleri Listele
# Tüm ürünleri getirir (şu an placeholder response)
GET {{baseUrl}}/api/{{apiVersion}}/products

###

### 7. GET PRODUCTS with Auth (Optional)
# Authentication ile ürünleri getir (gelecekte farklı response olabilir)
GET {{baseUrl}}/api/{{apiVersion}}/products
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###

# TEST SENARYOLARI VE BEKLENTİLER:

### REGISTER ENDPOINT TESTLERI:
# ✅ Başarılı kayıt: 200/201 status, JWT token, user data
# ✅ Duplicate email: 400 status, error message
# ✅ Eksik alan: 400 status, validation error
# ✅ Geçersiz email format: 400 status, validation error

### LOGIN ENDPOINT TESTLERI:
# ✅ Başarılı giriş: 200 status, JWT token, user data
# ✅ Yanlış şifre: 401 status, error message
# ✅ Olmayan email: 401 status, error message
# ✅ Eksik alan: 400 status, validation error

### LOGOUT ENDPOINT TESTLERI:
# ✅ Başarılı çıkış: 200 status, success message
# ✅ Geçersiz token: 401 status, error message
# ✅ Eksik token: 401 status, error message

### PRODUCTS ENDPOINT TESTLERI:
# ✅ Ürünler listesi: 200 status, products array (şu an placeholder)
# ✅ Authentication optional: Token ile veya token olmadan çalışır

###

# ÖRNEK BAŞARILI RESPONSE'LAR:

### Register Success Response:
# {
#   "message": "Hesap başarıyla oluşturuldu",
#   "data": {
#     "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
#     "user": {
#       "id": 1,
#       "email": "john.doe@example.com",
#       "first_name": "John",
#       "last_name": "Doe",
#       "role": "customer"
#     }
#   }
# }

### Login Success Response:
# {
#   "message": "Başarıyla giriş yapıldı",
#   "data": {
#     "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
#     "user": {
#       "id": 1,
#       "email": "john.doe@example.com",
#       "first_name": "John",
#       "last_name": "Doe",
#       "role": "customer"
#     }
#   }
# }

### Logout Success Response:
# {
#   "message": "Başarıyla çıkış yapıldı"
# }

### Products Response:
# {
#   "message": "Get products endpoint - henüz implement edilmedi"
# }
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "123456"
}

### 4. User Logout (Protected)
POST {{baseUrl}}/auth/logout
Authorization: Bearer {{token}}

### 5. Get Profile (Protected)
GET {{baseUrl}}/profile
Authorization: Bearer {{token}}

### 6. Get Products
GET {{baseUrl}}/products

### 7. Get Single Product
GET {{baseUrl}}/products/1

### 8. Get Cart (Protected)
GET {{baseUrl}}/cart
Authorization: Bearer {{token}}

### 9. Admin - Get Products
GET {{baseUrl}}/admin/products
Authorization: Bearer {{token}}
